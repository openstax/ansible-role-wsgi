---
- name: install gunicorn application specific service files
  become: yes
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: gunicorn-app.service, dest: "/lib/systemd/system/{{ openstax_wsgi_role.application_name }}.service" }
    - { src: gunicorn-app.socket, dest: "/lib/systemd/system/{{ openstax_wsgi_role.application_name }}.socket" }
    - { src: etc/defaults/gunicorn, dest: "/etc/default/{{ openstax_wsgi_role.application_name }}" }
    - { src: etc/tmpfiles.d/gunicorn.conf, dest: "/etc/tmpfiles.d/{{ openstax_wsgi_role.application_name }}.conf" }
  tags:
    - gunicorn-app-service

# This task is a bit out of place here yet pyramid applications do support websockets and need to be ran in a separate process with a very similar command
# The idea here is use different templates for the websockets that simply append -websocket to the app name similar to the task above.
- name: install pyramid websocket configuration
  become: yes
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: gunicorn-websocket.service, dest: "/lib/systemd/system/{{ openstax_wsgi_role.application_name }}-websocket.service" }
    - { src: gunicorn-websocket.socket, dest: "/lib/systemd/system/{{ openstax_wsgi_role.application_name }}-websocket.socket" }
    - { src: etc/defaults/gunicorn-websocket, dest: "/etc/default/{{ openstax_wsgi_role.application_name }}-websocket" }
    - { src: etc/tmpfiles.d/gunicorn-websocket.conf, dest: "/etc/tmpfiles.d/{{ openstax_wsgi_role.application_name }}-websocket.conf" }
  tags:
    - gunicorn-websocket-service
  when: openstax_wsgi_role.pyramid_websocket_conf is defined 

- name: start gunicorn socket
  become: yes
  service:
    name: "{{ openstax_wsgi_role.application_name }}.socket"
    enabled: yes
    state: started

- name: start gunicorn service
  become: yes
  service:
    name: "{{ openstax_wsgi_role.application_name }}.service"
    enabled: yes
    state: started
