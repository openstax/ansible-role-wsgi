- name: create temporary directory for github keys
  shell: mktemp -d /tmp/github.XXXXXX
  register: tempdir

- name: copy over openstax-bot github private key
  copy:
    src: "{{ openstax_wsgi_role.github_privkey }}"
    dest: "{{ tempdir.stdout }}/id_rsa"
  when: 
    - openstax_wsgi_role.github_repo is defined
    - openstax_wsgi_role.github_privkey is defined

- name: copy over openstax-bot public key
  copy:
    src: "{{ openstax_wsgi_role.github_pubkey }}"
    dest: "{{ tempdir.stdout }}/id_rsa.pub"
  when: 
    - openstax_wsgi_role.github_repo is defined 
    - openstax_wsgi_role.github_privkey is defined

- name: pull repository source
  become: yes
  git:
    repo: "{{ openstax_wsgi_role.github_repo }}"
    dest: "{{ openstax_wsgi_role.application_dir }}"
    force: yes
    update: yes
    clone: yes
    version: "{{ openstax_wsgi_role.github_repo_version | default('HEAD') }}"
    key_file: "{{ tempdir.stdout }}/id_rsa"
    accept_hostkey: yes
  notify:
    - fix permissions
  when:
    - openstax_wsgi_role.github_repo_version is defined
    - openstax_wsgi_role.github_latest is undefined

- name: clone repository source
  become: yes
  git:
    repo: "{{ openstax_wsgi_role.github_repo }}"
    dest: "{{ openstax_wsgi_role.application_dir }}"
    force: yes
    update: yes
    clone: yes
    version: HEAD
    key_file: "{{ tempdir.stdout }}/id_rsa"
    accept_hostkey: yes
  notify:
    - fix permissions
  when:
    - openstax_wsgi_role.github_repo is defined
    - openstax_wsgi_role.github_version is undefined or openstax_wsgi_role.github_latest is defined

- name: ensure proper permissions
  become: yes
  file:
    path: "{{ openstax_wsgi_role.application_dir }}"
    owner: "{{ openstax_wsgi_role.user }}"
    group: "{{ openstax_wsgi_role.group }}"
    recurse: yes
  tags: configuration

- name: remove github keys
  become: yes
  file:
    path: "{{ tempdir.stdout }}"
    state: absent
  when:
    - tempdir is defined
    - "'stdout' in tempdir"
